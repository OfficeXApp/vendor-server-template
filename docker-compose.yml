# docker-compose.yml - For Cloudflare/RepoCloud.io delegated SSL or local development
version: "3.8"

services:
  # TimescaleDB (PostgreSQL with TimescaleDB extension)
  db:
    image: timescale/timescaledb-ha:pg17
    restart: unless-stopped
    ports:
      - "5432:5432" # Expose PostgreSQL port to host
    environment:
      # These variables are read from your .env file
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Ensure PostgreSQL initializes properly
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - db_data:/home/postgres/pgdata/data # Persistent storage for database data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Your Node.js Fastify Application
  app:
    build: . # Build from the Dockerfile in the current directory
    restart: unless-stopped
    ports:
      - "3001:${PORT:-3001}" # Map host port 3001 to container port (default 3001)
      - "${PORT:-3001}:${PORT:-3001}" # Map host port 3001 to container port 3001 (for direct access)

    env_file:
      - ./.env

    volumes:
      - app_data:/data # Persistent storage for your application's data (e.g., /data/drives)
    depends_on:
      db:
        condition: service_healthy # Ensure database is ready before app starts

volumes:
  app_data:
    driver: local # Docker managed volume for app data
  db_data:
    driver: local # Docker managed volume for database data
    name: vendor_db_volume
